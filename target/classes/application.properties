#---------------------------------------------------------------------------- #
# Server                                                                      #
#---------------------------------------------------------------------------- #
server.port=${POCELVIS_PORT:8080}

# --------------------------------------------------------------------------- #
#    Spring Actuator and Swagger                                              #
# --------------------------------------------------------------------------- #
management.endpoints.web.exposure.include=${POCBACKEND_ACTUATOR_ENDPOINTS:info,health,metrics,flyway,prometheus,env}
management.endpoint.health.show-details=always
info.app.name = pocElvis
info.app.description = Parent pom providing dependency and plugin management for applications built with Maven
info.app.version = 1.0-SNAPSHOT
info.app.encoding=UTF-8
info.app.java.source=11.0.2
info.app.java.target=11.0.2
info.project.version=1.0-SNAPSHOT
info.project.artifactId=pocElvis
info.maven.build.timestamp=2021-10-22T15:54:48Z

# --------------------------------------------------------------------------- #
#   DB Config                                                                 #
# --------------------------------------------------------------------------- #
spring.main.allow-bean-definition-overriding=true
spring.datasource.url=jdbc:mysql://${POCELVIS_DATABASE_SERVER:localhost}:${POCELVIS_DATABASE_SERVER:3306}/poc?useSSL=false&serverTimezone=UTC&autoReconnect=true&sendFractionalSeconds=false
spring.datasource.username=${POCELVIS_DATABASE_SERVER:poc}
spring.datasource.password=${POCELVIS_DATABASE_SERVER:elvis@123}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update


# Producer properties
spring.kafka.producer.bootstrap-servers=127.0.0.1:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.group-id=group_id
topic.name.producer=topico.comando.teste


# Consumer properties
spring.kafka.consumer.bootstrap-servers=127.0.0.1:9092
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
topic.name.consumer=topico.comando.teste


# Common Kafka Properties
auto.create.topics.enable=true

